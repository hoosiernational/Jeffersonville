///A timezone. The current enumeration includes all sovereign nations and their various time
///delineations, without reliance on the Olson database. Each value has an associated u16
///for easy serialization purposes, which must be fetched from the get_u16() method, as future
///versions of this crate may rearrange the enumeration, but get_u16() will retain associations as
///best as reasonably possible.
#[derive(Clone, Eq, PartialEq, Debug)]
pub enum Timezone {
    Afghanistan,
    Albania,
    Algeria,
    Andorra,
    Angola,
    AntarcticaCasey,
    AntarcticaDavis,
    AntarcticaMacquarie,
    AntarcticaMawson,
    AntarcticaMcMurdo,
    AntarcticaPalmerAndRothera,
    AntarcticaSyowa,
    AntarcticaTroll,
    AntarcticaVostok,
    Antigua,
    Argentina,
    Armenia,
    AustraliaCentralSeasonal,
    AustraliaCentralStandardOnly,
    AustraliaCentralWestern,
    AustraliaChristmasIsland,
    AustraliaCocosIslands,
    AustraliaEasternSeasonal,
    AustraliaEasternStandardOnly,
    AustraliaHeardAndMcDonaldIslands,
    AustraliaLordHoweIsland,
    AustraliaNorfolkIsland,
    AustraliaTrainTime,
    AustraliaWestern,
    Austria,
    Azerbaijan,
    Bahamas,
    Bahrain,
    Bangladesh,
    Barbados,
    Belarus,
    Belgium,
    Belize,
    Benin,
    Bhutan,
    Bolivia,
    Bosnia,
    Botswana,
    BrazilAcre,
    BrazilAmazon,
    BrazilBrasilia,
    BrazilFernandoDeNoronha,
    Brunei,
    Bulgaria,
    BurkinaFaso,
    Burundi,
    Cambodia,
    Cameroon,
    CanadaAtlanticSeasonal,
    CanadaAtlanticStandardOnly,
    CanadaCentralSeasonal,
    CanadaCentralStandardOnly,
    CanadaEasternSeasonal,
    CanadaEasternStandardOnly,
    CanadaMountainSeasonal,
    CanadaMountainStandardOnly,
    CanadaNewfoundland,
    CanadaPacific,
    CapeVerde,
    CentralAfricanRepublic,
    Chad,
    ChileEasterIsland,
    ChileMagallanes,
    ChilePrimary,
    China,
    Colombia,
    Comoros,
    CongoKinshasaCentralAfrican,
    CongoKinshasaWesternAfrican,
    CostaRica,
    Croatia,
    Cuba,
    Cyprus,
    CzechRepublic,
    DenmarkContinental,
    DenmarkDanmarkshavn,
    DenmarkFaroeIslands,
    DenmarkIttoqqortoormiit,
    DenmarkThule,
    DenmarkWesternGreenland,
    Djibouti,
    Dominica,
    Dominican,
    EastTimor,
    EcuadorContinental,
    EcuadorGalapagos,
    Egypt,
    ElSalvador,
    EquatorialGuinea,
    Eritrea,
    Estonia,
    Eswatini,
    Ethiopia,
    Fiji,
    Finland,
    FranceCaribbean,
    FranceClippertonIsland,
    FranceFrenchGuaina,
    FranceGamierIslands,
    FranceKerguelenStPaulAndAmsterdam,
    FranceMarquesasIslands,
    FranceMayotteAndScatteredIslands,
    FranceMetropolitan,
    FranceNewCaledonia,
    FranceReunionAndCrozetIslands,
    FranceSaintPierreAndMiquelon,
    FranceSocietyTuamotuAndAustralIslands,
    FranceWallisAndFutuna,
    Gabon,
    Gambia,
    Georgia,
    Germany,
    Ghana,
    Greece,
    Grenada,
    Guatemala,
    Guinea,
    GuineaBissau,
    Guyana,
    Haiti,
    HighSeasAlfa,
    HighSeasBravo,
    HighSeasCharlie,
    HighSeasDelta,
    HighSeasEcho,
    HighSeasFoxtrot,
    HighSeasGolf,
    HighSeasHotel,
    HighSeasIndia,
    HighSeasKilo,
    HighSeasLima,
    HighSeasMike,
    HighSeasNovember,
    HighSeasOscar,
    HighSeasPapa,
    HighSeasQuebec,
    HighSeasRomeo,
    HighSeasSierra,
    HighSeasTango,
    HighSeasUniform,
    HighSeasVictor,
    HighSeasWhiskey,
    HighSeasXray,
    HighSeasYankee,
    Honduras,
    HongKong,
    Hungary,
    Iceland,
    India,
    IndonesiaCentral,
    IndonesiaEastern,
    IndonesiaWestern,
    Iran,
    Iraq,
    Ireland,
    Israel,
    Italy,
    IvoryCoast,
    Jamaica,
    Japan,
    Jordan,
    KazakhstanEastern,
    KazakhstanWestern,
    Kenya,
    KiribatiGilbert,
    KiribatiLineIslands,
    KiribatiPhoenixIslands,
    Kosovo,
    Kuwait,
    Kyrgyzstan,
    Laos,
    Latvia,
    Lebanon,
    Lesotho,
    Liberia,
    Libya,
    Liechtenstein,
    Lithuania,
    Luxembourg,
    Macau,
    Madagascar,
    Malawi,
    Malaysia,
    Maldives,
    Mali,
    Malta,
    Marshall,
    Mauritania,
    Mauritius,
    MexicoAmericanCentral,
    MexicoAmericanMountain,
    MexicoAmericanPacific,
    MexicoMexicanCentral,
    MexicoMexicanPacific,
    MexicoMexicanSoutheast,
    MicronesiaEastern,
    MicronesiaWestern,
    Moldova,
    Monaco,
    MongoliaEastern,
    MongoliaWestern,
    Montenegro,
    Morocco,
    Mozambique,
    Myanmar,
    Namibia,
    Nauru,
    Nepal,
    NetherlandsCaribbean,
    NetherlandsContinental,
    NewZealandChathamIslands,
    NewZealandCookIslands,
    NewZealandNiue,
    NewZealandPrimary,
    NewZealandTokelau,
    Nicaragua,
    Niger,
    Nigeria,
    NorthKorea,
    NorthMacedonia,
    Norway,
    Oman,
    Pakistan,
    Palau,
    Palestine,
    Panama,
    PapuaNewGuineaBouganville,
    PapuaNewGuineaBouganvillePrimary,
    Paraguay,
    Peru,
    Philippines,
    Poland,
    PortugalAzores,
    PortugalContinental,
    Qatar,
    RepublicOfTheCongo,
    Romania,
    RussiaIrkutsk,
    RussiaKaliningrad,
    RussiaKamchatka,
    RussiaKrasnoyarsk,
    RussiaMagadan,
    RussiaMoscow,
    RussiaOmsk,
    RussiaSamara,
    RussiaVladivostok,
    RussiaYakutsk,
    RussiaYekaterinburg,
    Rwanda,
    SaintKittsAndNevis,
    SaintLucia,
    SaintVicentAndTheGrandines,
    Samoa,
    SanMarino,
    SaoTomeAndPrincipe,
    SaudiArabia,
    Senegal,
    Serbia,
    Seychelles,
    SierraLeone,
    Singapore,
    Slovakia,
    Slovenia,
    SolomonIslands,
    Somalia,
    SouthAfrica,
    SouthKorea,
    SouthSudan,
    SpainCanaryIslands,
    SpainContinental,
    SriLanka,
    Sudan,
    Suriname,
    Sweden,
    Switzerland,
    Syria,
    Taiwan,
    Tajikistan,
    Tanzania,
    Thailand,
    Togo,
    Tonga,
    TrinidadAndTobago,
    Tunisia,
    Turkey,
    Turkmenistan,
    Tuvalu,
    Uganda,
    Ukraine,
    UnitedArabEmirates,
    UnitedKingdomBermuda,
    UnitedKingdomBritishIsles,
    UnitedKingdomCaribbean,
    UnitedKingdomCaymanIslands,
    UnitedKingdomFalklands,
    UnitedKingdomGibraltar,
    UnitedKingdomIndianOcean,
    UnitedKingdomIslandOfCyprus,
    UnitedKingdomPitcairnIslands,
    UnitedKingdomSaintHelena,
    UnitedKingdomSouthGeorgiaAndSandwichIslands,
    UnitedStatesAlaskan,
    UnitedStatesAleutian,
    UnitedStatesAtlantic,
    UnitedStatesCentral,
    UnitedStatesChamorro,
    UnitedStatesEastern,
    UnitedStatesHawaiian,
    UnitedStatesMountainSeasonal,
    UnitedStatesMountainStandardOnly,
    UnitedStatesPacific,
    UnitedStatesSamoan,
    Uruguay,
    Uzbekistan,
    Vanuatu,
    Vatican,
    Venezuela,
    Vietnam,
    Yemen,
    Zambia,
    Zimbabwe,
    UTC,
}

impl Timezone {
    ///Gets a Timezone from its u16 value. If the u16 value is unrecognized, UTC is the default.
    pub fn from_u16(input: u16) -> Self {
        match input {
            13 => Self::Afghanistan,
            15 => Self::Albania,
            17 => Self::Algeria,
            19 => Self::Andorra,
            21 => Self::Angola,
            23 => Self::AntarcticaCasey,
            25 => Self::AntarcticaDavis,
            27 => Self::AntarcticaMacquarie,
            29 => Self::AntarcticaMawson,
            30 => Self::AntarcticaMcMurdo,
            31 => Self::AntarcticaPalmerAndRothera,
            32 => Self::AntarcticaSyowa,
            33 => Self::AntarcticaTroll,
            34 => Self::AntarcticaVostok,
            35 => Self::Antigua,
            36 => Self::Argentina,
            37 => Self::Armenia,
            38 => Self::AustraliaCentralSeasonal,
            39 => Self::AustraliaCentralStandardOnly,
            40 => Self::AustraliaCentralWestern,
            41 => Self::AustraliaChristmasIsland,
            42 => Self::AustraliaCocosIslands,
            43 => Self::AustraliaEasternSeasonal,
            44 => Self::AustraliaEasternStandardOnly,
            45 => Self::AustraliaHeardAndMcDonaldIslands,
            46 => Self::AustraliaLordHoweIsland,
            47 => Self::AustraliaNorfolkIsland,
            48 => Self::AustraliaTrainTime,
            49 => Self::AustraliaWestern,
            50 => Self::Austria,
            51 => Self::Azerbaijan,
            52 => Self::Bahamas,
            53 => Self::Bahrain,
            54 => Self::Bangladesh,
            55 => Self::Barbados,
            56 => Self::Belarus,
            57 => Self::Belgium,
            58 => Self::Belize,
            59 => Self::Benin,
            60 => Self::Bhutan,
            61 => Self::Bolivia,
            62 => Self::Bosnia,
            63 => Self::Botswana,
            64 => Self::BrazilAcre,
            65 => Self::BrazilAmazon,
            66 => Self::BrazilBrasilia,
            67 => Self::BrazilFernandoDeNoronha,
            68 => Self::Brunei,
            69 => Self::Bulgaria,
            70 => Self::BurkinaFaso,
            71 => Self::Burundi,
            72 => Self::Cambodia,
            73 => Self::Cameroon,
            74 => Self::CanadaAtlanticSeasonal,
            75 => Self::CanadaAtlanticStandardOnly,
            76 => Self::CanadaCentralSeasonal,
            77 => Self::CanadaCentralStandardOnly,
            78 => Self::CanadaEasternSeasonal,
            79 => Self::CanadaEasternStandardOnly,
            80 => Self::CanadaMountainSeasonal,
            81 => Self::CanadaMountainStandardOnly,
            82 => Self::CanadaNewfoundland,
            83 => Self::CanadaPacific,
            84 => Self::CapeVerde,
            85 => Self::CentralAfricanRepublic,
            86 => Self::Chad,
            87 => Self::ChileEasterIsland,
            88 => Self::ChileMagallanes,
            89 => Self::ChilePrimary,
            90 => Self::China,
            91 => Self::Colombia,
            92 => Self::Comoros,
            93 => Self::CongoKinshasaCentralAfrican,
            94 => Self::CongoKinshasaWesternAfrican,
            95 => Self::CostaRica,
            96 => Self::Croatia,
            97 => Self::Cuba,
            98 => Self::Cyprus,
            99 => Self::CzechRepublic,
            100 => Self::DenmarkContinental,
            101 => Self::DenmarkDanmarkshavn,
            102 => Self::DenmarkFaroeIslands,
            103 => Self::DenmarkIttoqqortoormiit,
            104 => Self::DenmarkThule,
            105 => Self::DenmarkWesternGreenland,
            106 => Self::Djibouti,
            107 => Self::Dominica,
            108 => Self::Dominican,
            109 => Self::EastTimor,
            110 => Self::EcuadorContinental,
            111 => Self::EcuadorGalapagos,
            112 => Self::Egypt,
            113 => Self::ElSalvador,
            114 => Self::EquatorialGuinea,
            115 => Self::Eritrea,
            116 => Self::Estonia,
            117 => Self::Eswatini,
            118 => Self::Ethiopia,
            119 => Self::Fiji,
            120 => Self::Finland,
            121 => Self::FranceCaribbean,
            122 => Self::FranceClippertonIsland,
            123 => Self::FranceFrenchGuaina,
            124 => Self::FranceGamierIslands,
            125 => Self::FranceKerguelenStPaulAndAmsterdam,
            126 => Self::FranceMarquesasIslands,
            127 => Self::FranceMayotteAndScatteredIslands,
            128 => Self::FranceMetropolitan,
            129 => Self::FranceNewCaledonia,
            130 => Self::FranceReunionAndCrozetIslands,
            131 => Self::FranceSaintPierreAndMiquelon,
            132 => Self::FranceSocietyTuamotuAndAustralIslands,
            133 => Self::FranceWallisAndFutuna,
            134 => Self::Gabon,
            135 => Self::Gambia,
            136 => Self::Georgia,
            137 => Self::Germany,
            138 => Self::Ghana,
            139 => Self::Greece,
            140 => Self::Grenada,
            141 => Self::Guatemala,
            142 => Self::Guinea,
            143 => Self::GuineaBissau,
            144 => Self::Guyana,
            145 => Self::Haiti,
            0 => Self::UTC,
            146 => Self::HighSeasAlfa,
            147 => Self::HighSeasBravo,
            148 => Self::HighSeasCharlie,
            149 => Self::HighSeasDelta,
            150 => Self::HighSeasEcho,
            151 => Self::HighSeasFoxtrot,
            152 => Self::HighSeasGolf,
            153 => Self::HighSeasHotel,
            154 => Self::HighSeasIndia,
            155 => Self::HighSeasKilo,
            156 => Self::HighSeasLima,
            157 => Self::HighSeasMike,
            158 => Self::HighSeasNovember,
            159 => Self::HighSeasOscar,
            160 => Self::HighSeasPapa,
            161 => Self::HighSeasQuebec,
            162 => Self::HighSeasRomeo,
            163 => Self::HighSeasSierra,
            164 => Self::HighSeasTango,
            165 => Self::HighSeasUniform,
            166 => Self::HighSeasVictor,
            167 => Self::HighSeasWhiskey,
            168 => Self::HighSeasXray,
            169 => Self::HighSeasYankee,
            170 => Self::Honduras,
            171 => Self::HongKong,
            172 => Self::Hungary,
            173 => Self::Iceland,
            174 => Self::India,
            175 => Self::IndonesiaCentral,
            176 => Self::IndonesiaEastern,
            177 => Self::IndonesiaWestern,
            178 => Self::Iran,
            179 => Self::Iraq,
            180 => Self::Ireland,
            181 => Self::Israel,
            182 => Self::Italy,
            183 => Self::IvoryCoast,
            184 => Self::Jamaica,
            185 => Self::Japan,
            186 => Self::Jordan,
            187 => Self::KazakhstanEastern,
            188 => Self::KazakhstanWestern,
            189 => Self::Kenya,
            190 => Self::KiribatiGilbert,
            191 => Self::KiribatiLineIslands,
            192 => Self::KiribatiPhoenixIslands,
            193 => Self::Kosovo,
            194 => Self::Kuwait,
            195 => Self::Kyrgyzstan,
            196 => Self::Laos,
            197 => Self::Latvia,
            198 => Self::Lebanon,
            199 => Self::Lesotho,
            200 => Self::Liberia,
            201 => Self::Libya,
            202 => Self::Liechtenstein,
            203 => Self::Lithuania,
            204 => Self::Luxembourg,
            205 => Self::Macau,
            206 => Self::Madagascar,
            207 => Self::Malawi,
            208 => Self::Malaysia,
            209 => Self::Maldives,
            210 => Self::Mali,
            211 => Self::Malta,
            212 => Self::Marshall,
            213 => Self::Mauritania,
            214 => Self::Mauritius,
            215 => Self::MexicoAmericanCentral,
            216 => Self::MexicoAmericanMountain,
            217 => Self::MexicoAmericanPacific,
            218 => Self::MexicoMexicanCentral,
            219 => Self::MexicoMexicanPacific,
            220 => Self::MexicoMexicanSoutheast,
            221 => Self::MicronesiaEastern,
            222 => Self::MicronesiaWestern,
            223 => Self::Moldova,
            224 => Self::Monaco,
            225 => Self::MongoliaEastern,
            226 => Self::MongoliaWestern,
            227 => Self::Montenegro,
            228 => Self::Morocco,
            229 => Self::Mozambique,
            230 => Self::Myanmar,
            231 => Self::Namibia,
            232 => Self::Nauru,
            233 => Self::Nepal,
            234 => Self::NetherlandsCaribbean,
            235 => Self::NetherlandsContinental,
            236 => Self::NewZealandChathamIslands,
            237 => Self::NewZealandCookIslands,
            238 => Self::NewZealandNiue,
            239 => Self::NewZealandPrimary,
            240 => Self::NewZealandTokelau,
            241 => Self::Nicaragua,
            242 => Self::Niger,
            243 => Self::Nigeria,
            244 => Self::NorthKorea,
            245 => Self::NorthMacedonia,
            246 => Self::Norway,
            247 => Self::Oman,
            248 => Self::Pakistan,
            249 => Self::Palau,
            250 => Self::Palestine,
            251 => Self::Panama,
            252 => Self::PapuaNewGuineaBouganville,
            253 => Self::PapuaNewGuineaBouganvillePrimary,
            254 => Self::Paraguay,
            255 => Self::Peru,
            256 => Self::Philippines,
            257 => Self::Poland,
            258 => Self::PortugalAzores,
            259 => Self::PortugalContinental,
            260 => Self::Qatar,
            261 => Self::RepublicOfTheCongo,
            262 => Self::Romania,
            263 => Self::RussiaIrkutsk,
            264 => Self::RussiaKaliningrad,
            265 => Self::RussiaKamchatka,
            266 => Self::RussiaKrasnoyarsk,
            267 => Self::RussiaMagadan,
            268 => Self::RussiaMoscow,
            269 => Self::RussiaOmsk,
            270 => Self::RussiaSamara,
            271 => Self::RussiaVladivostok,
            272 => Self::RussiaYakutsk,
            273 => Self::RussiaYekaterinburg,
            274 => Self::Rwanda,
            275 => Self::SaintKittsAndNevis,
            276 => Self::SaintLucia,
            277 => Self::SaintVicentAndTheGrandines,
            278 => Self::Samoa,
            279 => Self::SanMarino,
            280 => Self::SaoTomeAndPrincipe,
            281 => Self::SaudiArabia,
            282 => Self::Senegal,
            283 => Self::Serbia,
            284 => Self::Seychelles,
            285 => Self::SierraLeone,
            286 => Self::Singapore,
            287 => Self::Slovakia,
            288 => Self::Slovenia,
            289 => Self::SolomonIslands,
            290 => Self::Somalia,
            291 => Self::SouthAfrica,
            292 => Self::SouthKorea,
            293 => Self::SouthSudan,
            294 => Self::SpainCanaryIslands,
            295 => Self::SpainContinental,
            296 => Self::SriLanka,
            297 => Self::Sudan,
            298 => Self::Suriname,
            299 => Self::Sweden,
            300 => Self::Switzerland,
            301 => Self::Syria,
            302 => Self::Taiwan,
            303 => Self::Tajikistan,
            304 => Self::Tanzania,
            305 => Self::Thailand,
            306 => Self::Togo,
            307 => Self::Tonga,
            308 => Self::TrinidadAndTobago,
            309 => Self::Tunisia,
            310 => Self::Turkey,
            311 => Self::Turkmenistan,
            312 => Self::Tuvalu,
            313 => Self::Uganda,
            314 => Self::Ukraine,
            315 => Self::UnitedArabEmirates,
            316 => Self::UnitedKingdomBermuda,
            317 => Self::UnitedKingdomBritishIsles,
            318 => Self::UnitedKingdomCaribbean,
            319 => Self::UnitedKingdomCaymanIslands,
            320 => Self::UnitedKingdomFalklands,
            321 => Self::UnitedKingdomGibraltar,
            322 => Self::UnitedKingdomIndianOcean,
            323 => Self::UnitedKingdomIslandOfCyprus,
            324 => Self::UnitedKingdomPitcairnIslands,
            325 => Self::UnitedKingdomSaintHelena,
            326 => Self::UnitedKingdomSouthGeorgiaAndSandwichIslands,
            6 => Self::UnitedStatesAlaskan,
            8 => Self::UnitedStatesAleutian,
            9 => Self::UnitedStatesAtlantic,
            2 => Self::UnitedStatesCentral,
            11 => Self::UnitedStatesChamorro,
            1 => Self::UnitedStatesEastern,
            7 => Self::UnitedStatesHawaiian,
            4 => Self::UnitedStatesMountainSeasonal,
            3 => Self::UnitedStatesMountainStandardOnly,
            5 => Self::UnitedStatesPacific,
            10 => Self::UnitedStatesSamoan,
            12 => Self::Uruguay,
            14 => Self::Uzbekistan,
            16 => Self::Vanuatu,
            18 => Self::Vatican,
            20 => Self::Venezuela,
            22 => Self::Vietnam,
            24 => Self::Yemen,
            26 => Self::Zambia,
            28 => Self::Zimbabwe,
            _ => Self::UTC,
        }
    }

    ///Returns the U16 representation of this Timezone
    pub fn get_u16(&self) -> u16 {
        match self {
            Self::Afghanistan => 13,
            Self::Albania => 15,
            Self::Algeria => 17,
            Self::Andorra => 19,
            Self::Angola => 21,
            Self::AntarcticaCasey => 23,
            Self::AntarcticaDavis => 25,
            Self::AntarcticaMacquarie => 27,
            Self::AntarcticaMawson => 29,
            Self::AntarcticaMcMurdo => 30,
            Self::AntarcticaPalmerAndRothera => 31,
            Self::AntarcticaSyowa => 32,
            Self::AntarcticaTroll => 33,
            Self::AntarcticaVostok => 34,
            Self::Antigua => 35,
            Self::Argentina => 36,
            Self::Armenia => 37,
            Self::AustraliaCentralSeasonal => 38,
            Self::AustraliaCentralStandardOnly => 39,
            Self::AustraliaCentralWestern => 40,
            Self::AustraliaChristmasIsland => 41,
            Self::AustraliaCocosIslands => 42,
            Self::AustraliaEasternSeasonal => 43,
            Self::AustraliaEasternStandardOnly => 44,
            Self::AustraliaHeardAndMcDonaldIslands => 45,
            Self::AustraliaLordHoweIsland => 46,
            Self::AustraliaNorfolkIsland => 47,
            Self::AustraliaTrainTime => 48,
            Self::AustraliaWestern => 49,
            Self::Austria => 50,
            Self::Azerbaijan => 51,
            Self::Bahamas => 52,
            Self::Bahrain => 53,
            Self::Bangladesh => 54,
            Self::Barbados => 55,
            Self::Belarus => 56,
            Self::Belgium => 57,
            Self::Belize => 58,
            Self::Benin => 59,
            Self::Bhutan => 60,
            Self::Bolivia => 61,
            Self::Bosnia => 62,
            Self::Botswana => 63,
            Self::BrazilAcre => 64,
            Self::BrazilAmazon => 65,
            Self::BrazilBrasilia => 66,
            Self::BrazilFernandoDeNoronha => 67,
            Self::Brunei => 68,
            Self::Bulgaria => 69,
            Self::BurkinaFaso => 70,
            Self::Burundi => 71,
            Self::Cambodia => 72,
            Self::Cameroon => 73,
            Self::CanadaAtlanticSeasonal => 74,
            Self::CanadaAtlanticStandardOnly => 75,
            Self::CanadaCentralSeasonal => 76,
            Self::CanadaCentralStandardOnly => 77,
            Self::CanadaEasternSeasonal => 78,
            Self::CanadaEasternStandardOnly => 79,
            Self::CanadaMountainSeasonal => 80,
            Self::CanadaMountainStandardOnly => 81,
            Self::CanadaNewfoundland => 82,
            Self::CanadaPacific => 83,
            Self::CapeVerde => 84,
            Self::CentralAfricanRepublic => 85,
            Self::Chad => 86,
            Self::ChileEasterIsland => 87,
            Self::ChileMagallanes => 88,
            Self::ChilePrimary => 89,
            Self::China => 90,
            Self::Colombia => 91,
            Self::Comoros => 92,
            Self::CongoKinshasaCentralAfrican => 93,
            Self::CongoKinshasaWesternAfrican => 94,
            Self::CostaRica => 95,
            Self::Croatia => 96,
            Self::Cuba => 97,
            Self::Cyprus => 98,
            Self::CzechRepublic => 99,
            Self::DenmarkContinental => 100,
            Self::DenmarkDanmarkshavn => 101,
            Self::DenmarkFaroeIslands => 102,
            Self::DenmarkIttoqqortoormiit => 103,
            Self::DenmarkThule => 104,
            Self::DenmarkWesternGreenland => 105,
            Self::Djibouti => 106,
            Self::Dominica => 107,
            Self::Dominican => 108,
            Self::EastTimor => 109,
            Self::EcuadorContinental => 110,
            Self::EcuadorGalapagos => 111,
            Self::Egypt => 112,
            Self::ElSalvador => 113,
            Self::EquatorialGuinea => 114,
            Self::Eritrea => 115,
            Self::Estonia => 116,
            Self::Eswatini => 117,
            Self::Ethiopia => 118,
            Self::Fiji => 119,
            Self::Finland => 120,
            Self::FranceCaribbean => 121,
            Self::FranceClippertonIsland => 122,
            Self::FranceFrenchGuaina => 123,
            Self::FranceGamierIslands => 124,
            Self::FranceKerguelenStPaulAndAmsterdam => 125,
            Self::FranceMarquesasIslands => 126,
            Self::FranceMayotteAndScatteredIslands => 127,
            Self::FranceMetropolitan => 128,
            Self::FranceNewCaledonia => 129,
            Self::FranceReunionAndCrozetIslands => 130,
            Self::FranceSaintPierreAndMiquelon => 131,
            Self::FranceSocietyTuamotuAndAustralIslands => 132,
            Self::FranceWallisAndFutuna => 133,
            Self::Gabon => 134,
            Self::Gambia => 135,
            Self::Georgia => 136,
            Self::Germany => 137,
            Self::Ghana => 138,
            Self::Greece => 139,
            Self::Grenada => 140,
            Self::Guatemala => 141,
            Self::Guinea => 142,
            Self::GuineaBissau => 143,
            Self::Guyana => 144,
            Self::Haiti => 145,
            Self::UTC => 0,
            Self::HighSeasAlfa => 146,
            Self::HighSeasBravo => 147,
            Self::HighSeasCharlie => 148,
            Self::HighSeasDelta => 149,
            Self::HighSeasEcho => 150,
            Self::HighSeasFoxtrot => 151,
            Self::HighSeasGolf => 152,
            Self::HighSeasHotel => 153,
            Self::HighSeasIndia => 154,
            Self::HighSeasKilo => 155,
            Self::HighSeasLima => 156,
            Self::HighSeasMike => 157,
            Self::HighSeasNovember => 158,
            Self::HighSeasOscar => 159,
            Self::HighSeasPapa => 160,
            Self::HighSeasQuebec => 161,
            Self::HighSeasRomeo => 162,
            Self::HighSeasSierra => 163,
            Self::HighSeasTango => 164,
            Self::HighSeasUniform => 165,
            Self::HighSeasVictor => 166,
            Self::HighSeasWhiskey => 167,
            Self::HighSeasXray => 168,
            Self::HighSeasYankee => 169,
            Self::Honduras => 170,
            Self::HongKong => 171,
            Self::Hungary => 172,
            Self::Iceland => 173,
            Self::India => 174,
            Self::IndonesiaCentral => 175,
            Self::IndonesiaEastern => 176,
            Self::IndonesiaWestern => 177,
            Self::Iran => 178,
            Self::Iraq => 179,
            Self::Ireland => 180,
            Self::Israel => 181,
            Self::Italy => 182,
            Self::IvoryCoast => 183,
            Self::Jamaica => 184,
            Self::Japan => 185,
            Self::Jordan => 186,
            Self::KazakhstanEastern => 187,
            Self::KazakhstanWestern => 188,
            Self::Kenya => 189,
            Self::KiribatiGilbert => 190,
            Self::KiribatiLineIslands => 191,
            Self::KiribatiPhoenixIslands => 192,
            Self::Kosovo => 193,
            Self::Kuwait => 194,
            Self::Kyrgyzstan => 195,
            Self::Laos => 196,
            Self::Latvia => 197,
            Self::Lebanon => 198,
            Self::Lesotho => 199,
            Self::Liberia => 200,
            Self::Libya => 201,
            Self::Liechtenstein => 202,
            Self::Lithuania => 203,
            Self::Luxembourg => 204,
            Self::Macau => 205,
            Self::Madagascar => 206,
            Self::Malawi => 207,
            Self::Malaysia => 208,
            Self::Maldives => 209,
            Self::Mali => 210,
            Self::Malta => 211,
            Self::Marshall => 212,
            Self::Mauritania => 213,
            Self::Mauritius => 214,
            Self::MexicoAmericanCentral => 215,
            Self::MexicoAmericanMountain => 216,
            Self::MexicoAmericanPacific => 217,
            Self::MexicoMexicanCentral => 218,
            Self::MexicoMexicanPacific => 219,
            Self::MexicoMexicanSoutheast => 220,
            Self::MicronesiaEastern => 221,
            Self::MicronesiaWestern => 222,
            Self::Moldova => 223,
            Self::Monaco => 224,
            Self::MongoliaEastern => 225,
            Self::MongoliaWestern => 226,
            Self::Montenegro => 227,
            Self::Morocco => 228,
            Self::Mozambique => 229,
            Self::Myanmar => 230,
            Self::Namibia => 231,
            Self::Nauru => 232,
            Self::Nepal => 233,
            Self::NetherlandsCaribbean => 234,
            Self::NetherlandsContinental => 235,
            Self::NewZealandChathamIslands => 236,
            Self::NewZealandCookIslands => 237,
            Self::NewZealandNiue => 238,
            Self::NewZealandPrimary => 239,
            Self::NewZealandTokelau => 240,
            Self::Nicaragua => 241,
            Self::Niger => 242,
            Self::Nigeria => 243,
            Self::NorthKorea => 244,
            Self::NorthMacedonia => 245,
            Self::Norway => 246,
            Self::Oman => 247,
            Self::Pakistan => 248,
            Self::Palau => 249,
            Self::Palestine => 250,
            Self::Panama => 251,
            Self::PapuaNewGuineaBouganville => 252,
            Self::PapuaNewGuineaBouganvillePrimary => 253,
            Self::Paraguay => 254,
            Self::Peru => 255,
            Self::Philippines => 256,
            Self::Poland => 257,
            Self::PortugalAzores => 258,
            Self::PortugalContinental => 259,
            Self::Qatar => 260,
            Self::RepublicOfTheCongo => 261,
            Self::Romania => 262,
            Self::RussiaIrkutsk => 263,
            Self::RussiaKaliningrad => 264,
            Self::RussiaKamchatka => 265,
            Self::RussiaKrasnoyarsk => 266,
            Self::RussiaMagadan => 267,
            Self::RussiaMoscow => 268,
            Self::RussiaOmsk => 269,
            Self::RussiaSamara => 270,
            Self::RussiaVladivostok => 271,
            Self::RussiaYakutsk => 272,
            Self::RussiaYekaterinburg => 273,
            Self::Rwanda => 274,
            Self::SaintKittsAndNevis => 275,
            Self::SaintLucia => 276,
            Self::SaintVicentAndTheGrandines => 277,
            Self::Samoa => 278,
            Self::SanMarino => 279,
            Self::SaoTomeAndPrincipe => 280,
            Self::SaudiArabia => 281,
            Self::Senegal => 282,
            Self::Serbia => 283,
            Self::Seychelles => 284,
            Self::SierraLeone => 285,
            Self::Singapore => 286,
            Self::Slovakia => 287,
            Self::Slovenia => 288,
            Self::SolomonIslands => 289,
            Self::Somalia => 290,
            Self::SouthAfrica => 291,
            Self::SouthKorea => 292,
            Self::SouthSudan => 293,
            Self::SpainCanaryIslands => 294,
            Self::SpainContinental => 295,
            Self::SriLanka => 296,
            Self::Sudan => 297,
            Self::Suriname => 298,
            Self::Sweden => 299,
            Self::Switzerland => 300,
            Self::Syria => 301,
            Self::Taiwan => 302,
            Self::Tajikistan => 303,
            Self::Tanzania => 304,
            Self::Thailand => 305,
            Self::Togo => 306,
            Self::Tonga => 307,
            Self::TrinidadAndTobago => 308,
            Self::Tunisia => 309,
            Self::Turkey => 310,
            Self::Turkmenistan => 311,
            Self::Tuvalu => 312,
            Self::Uganda => 313,
            Self::Ukraine => 314,
            Self::UnitedArabEmirates => 315,
            Self::UnitedKingdomBermuda => 316,
            Self::UnitedKingdomBritishIsles => 317,
            Self::UnitedKingdomCaribbean => 318,
            Self::UnitedKingdomCaymanIslands => 319,
            Self::UnitedKingdomFalklands => 320,
            Self::UnitedKingdomGibraltar => 321,
            Self::UnitedKingdomIndianOcean => 322,
            Self::UnitedKingdomIslandOfCyprus => 323,
            Self::UnitedKingdomPitcairnIslands => 324,
            Self::UnitedKingdomSaintHelena => 325,
            Self::UnitedKingdomSouthGeorgiaAndSandwichIslands => 326,
            Self::UnitedStatesAlaskan => 6,
            Self::UnitedStatesAleutian => 8,
            Self::UnitedStatesAtlantic => 9,
            Self::UnitedStatesCentral => 2,
            Self::UnitedStatesChamorro => 11,
            Self::UnitedStatesEastern => 1,
            Self::UnitedStatesHawaiian => 7,
            Self::UnitedStatesMountainSeasonal => 4,
            Self::UnitedStatesMountainStandardOnly => 3,
            Self::UnitedStatesPacific => 5,
            Self::UnitedStatesSamoan => 10,
            Self::Uruguay => 12,
            Self::Uzbekistan => 14,
            Self::Vanuatu => 16,
            Self::Vatican => 18,
            Self::Venezuela => 20,
            Self::Vietnam => 22,
            Self::Yemen => 24,
            Self::Zambia => 26,
            Self::Zimbabwe => 28,
        }
    }

    ///Returns the country and, if necessary, the timezone for a given Timezone for
    ///display purposes
    pub fn get_country_and_region(&self) -> (String, Option<String>) {
        match self.get_u16() {
            1 => ("United States".to_string(), Some("Eastern".to_string())),
            2 => ("United States".to_string(), Some("Central".to_string())),
            3 => (
                "United States".to_string(),
                Some("Mountain Standard-Only".to_string()),
            ),
            4 => (
                "United States".to_string(),
                Some("Mountain Seasonal".to_string()),
            ),
            5 => ("United States".to_string(), Some("Pacific".to_string())),
            6 => ("United States".to_string(), Some("Alaskan".to_string())),
            7 => ("United States".to_string(), Some("Hawaiian".to_string())),
            8 => ("United States".to_string(), Some("Aleutian".to_string())),
            9 => ("United States".to_string(), Some("Atlantic".to_string())),
            10 => ("United States".to_string(), Some("Samoan".to_string())),
            11 => ("United States".to_string(), Some("Chamorro".to_string())),
            12 => ("Uruguay".to_string(), None),
            13 => ("Afghanistan".to_string(), None),
            14 => ("Uzbekistan".to_string(), None),
            15 => ("Albania".to_string(), None),
            16 => ("Vanuatu".to_string(), None),
            17 => ("Algeria".to_string(), None),
            18 => ("Vatican City".to_string(), None),
            19 => ("Andorra".to_string(), None),
            20 => ("Venezuela".to_string(), None),
            21 => ("Angola".to_string(), None),
            22 => ("Vietnam".to_string(), None),
            23 => ("Antarctica".to_string(), Some("Casey".to_string())),
            24 => ("Yemen".to_string(), None),
            25 => ("Antarctica".to_string(), Some("Davis".to_string())),
            26 => ("Zambia".to_string(), None),
            27 => ("Antarctica".to_string(), Some("Macquarie".to_string())),
            28 => ("Zimbabwe".to_string(), None),
            29 => ("Antarctica".to_string(), Some("Mawson".to_string())),
            30 => (
                "Antarctica".to_string(),
                Some("McMurdo and South Pole".to_string()),
            ),
            31 => (
                "Antarctica".to_string(),
                Some("Palmer and Rothera".to_string()),
            ),
            32 => ("Antarctica".to_string(), Some("Syowa".to_string())),
            33 => ("Antarctica".to_string(), Some("Troll".to_string())),
            34 => ("Antarctica".to_string(), Some("Vostok".to_string())),
            35 => ("Antigua and Barbuda".to_string(), None),
            36 => ("Argentina".to_string(), None),
            37 => ("Armenia".to_string(), None),
            38 => (
                "Australia".to_string(),
                Some("Central Seasonal".to_string()),
            ),
            39 => (
                "Australia".to_string(),
                Some("Central Standard-Only".to_string()),
            ),
            40 => ("Australia".to_string(), Some("Central-Western".to_string())),
            41 => (
                "Australia".to_string(),
                Some("Christmas Island".to_string()),
            ),
            42 => ("Australia".to_string(), Some("Cocos Islands".to_string())),
            43 => (
                "Australia".to_string(),
                Some("Eastern Seasonal".to_string()),
            ),
            44 => (
                "Australia".to_string(),
                Some("Eastern Standard-Only".to_string()),
            ),
            45 => (
                "Australia".to_string(),
                Some("Heard and McDonald Islands".to_string()),
            ),
            46 => (
                "Australia".to_string(),
                Some("Lord Howe Island".to_string()),
            ),
            47 => ("Australia".to_string(), Some("Norfolk Island".to_string())),
            48 => ("Australia".to_string(), Some("Train Time".to_string())),
            49 => ("Australia".to_string(), Some("Western".to_string())),
            50 => ("Austria".to_string(), None),
            51 => ("Azerbaijan".to_string(), None),
            52 => ("Bahamas".to_string(), None),
            53 => ("Bahrain".to_string(), None),
            54 => ("Bangladesh".to_string(), None),
            55 => ("Barbados".to_string(), None),
            56 => ("Belarus".to_string(), None),
            57 => ("Belgium".to_string(), None),
            58 => ("Belize".to_string(), None),
            59 => ("Benin".to_string(), None),
            60 => ("Bhutan".to_string(), None),
            61 => ("Bolivia".to_string(), None),
            62 => ("Bosnia and Herzegovina".to_string(), None),
            63 => ("Botswana".to_string(), None),
            64 => ("Brazil".to_string(), Some("Acre".to_string())),
            65 => ("Brazil".to_string(), Some("Amazon".to_string())),
            66 => ("Brazil".to_string(), Some("Brasilia".to_string())),
            67 => (
                "Brazil".to_string(),
                Some("Fernando de Noronha".to_string()),
            ),
            68 => ("Brunei".to_string(), None),
            69 => ("Bulgaria".to_string(), None),
            70 => ("Burkina Faso".to_string(), None),
            71 => ("Burundi".to_string(), None),
            72 => ("Cambodia".to_string(), None),
            73 => ("Cameroon".to_string(), None),
            74 => ("Canada".to_string(), Some("Atlantic Seasonal".to_string())),
            75 => (
                "Canada".to_string(),
                Some("Atlantic Standard-Only".to_string()),
            ),
            76 => ("Canada".to_string(), Some("Central Seasonal".to_string())),
            77 => (
                "Canada".to_string(),
                Some("Central Standard-Only".to_string()),
            ),
            78 => ("Canada".to_string(), Some("Eastern Seasonal".to_string())),
            79 => (
                "Canada".to_string(),
                Some("Eastern Standard-Only".to_string()),
            ),
            80 => ("Canada".to_string(), Some("Mountain Seasonal".to_string())),
            81 => (
                "Canada".to_string(),
                Some("Mountain Standard-Only".to_string()),
            ),
            82 => ("Canada".to_string(), Some("Newfoundland".to_string())),
            83 => ("Canada".to_string(), Some("Pacific".to_string())),
            84 => ("Cape Verde".to_string(), None),
            85 => ("Central African Republic".to_string(), None),
            86 => ("Chad".to_string(), None),
            87 => ("Chile".to_string(), Some("Easter Island".to_string())),
            88 => ("Chile".to_string(), Some("Magallanes".to_string())),
            89 => ("Chile".to_string(), Some("Primary".to_string())),
            90 => ("China".to_string(), None),
            91 => ("Colombia".to_string(), None),
            92 => ("Comoros".to_string(), None),
            93 => (
                "Congo-Kinshasa".to_string(),
                Some("Central African".to_string()),
            ),
            94 => (
                "Congo-Kinshasa".to_string(),
                Some("Western African".to_string()),
            ),
            95 => ("Costa Rica".to_string(), None),
            96 => ("Croatia".to_string(), None),
            97 => ("Cuba".to_string(), None),
            98 => ("Cyprus".to_string(), None),
            99 => ("Czech Republic".to_string(), None),
            100 => ("Denmark".to_string(), Some("Continental".to_string())),
            101 => ("Denmark".to_string(), Some("Danmarkshavn".to_string())),
            102 => ("Denmark".to_string(), Some("Faroe".to_string())),
            103 => ("Denmark".to_string(), Some("Ittoqqortoormiit".to_string())),
            104 => ("Denmark".to_string(), Some("Thule".to_string())),
            105 => ("Denmark".to_string(), Some("Western Greenland".to_string())),
            106 => ("Djibouti".to_string(), None),
            107 => ("Dominica".to_string(), None),
            108 => ("Dominican Republic".to_string(), None),
            109 => ("East Timor".to_string(), None),
            110 => ("Ecuador".to_string(), Some("Continental".to_string())),
            111 => ("Ecuador".to_string(), Some("Galapagos".to_string())),
            112 => ("Egypt".to_string(), None),
            113 => ("El Salvador".to_string(), None),
            114 => ("Equatorial Guinea".to_string(), None),
            115 => ("Eritrea".to_string(), None),
            116 => ("Estonia".to_string(), None),
            117 => ("Eswatini".to_string(), None),
            118 => ("Ethiopia".to_string(), None),
            119 => ("Fiji".to_string(), None),
            120 => ("Finland".to_string(), None),
            121 => ("France".to_string(), Some("Caribbean".to_string())),
            122 => ("France".to_string(), Some("Clipperton Island".to_string())),
            123 => ("France".to_string(), Some("French Guaina".to_string())),
            124 => ("France".to_string(), Some("Gamier Islands".to_string())),
            125 => (
                "France".to_string(),
                Some("Kerguelen St Paul Amsterdam".to_string()),
            ),
            126 => ("France".to_string(), Some("Marquesas Islands".to_string())),
            127 => (
                "France".to_string(),
                Some("Mayotte and Scattered Islands".to_string()),
            ),
            128 => ("France".to_string(), Some("Metropolitan".to_string())),
            129 => ("France".to_string(), Some("New Caledonia".to_string())),
            130 => (
                "France".to_string(),
                Some("Reunion and Crozet Islands".to_string()),
            ),
            131 => (
                "France".to_string(),
                Some("Saint Pierre and Miquelon".to_string()),
            ),
            132 => (
                "France".to_string(),
                Some("Society, Tuamotu, and Austral".to_string()),
            ),
            133 => ("France".to_string(), Some("Wallis and Futuna".to_string())),
            134 => ("Gabon".to_string(), None),
            135 => ("Gambia".to_string(), None),
            136 => ("Georgia".to_string(), None),
            137 => ("Germany".to_string(), None),
            138 => ("Ghana".to_string(), None),
            139 => ("Greece".to_string(), None),
            140 => ("Grenada".to_string(), None),
            141 => ("Guatemala".to_string(), None),
            142 => ("Guinea".to_string(), None),
            143 => ("Guinea-Bissau".to_string(), None),
            144 => ("Guyana".to_string(), None),
            145 => ("Haiti".to_string(), None),
            146 => ("HighSeas".to_string(), Some("Alfa".to_string())),
            147 => ("HighSeas".to_string(), Some("Bravo".to_string())),
            148 => ("HighSeas".to_string(), Some("Charlie".to_string())),
            149 => ("HighSeas".to_string(), Some("Delta".to_string())),
            150 => ("HighSeas".to_string(), Some("Echo".to_string())),
            151 => ("HighSeas".to_string(), Some("Foxtrot".to_string())),
            152 => ("HighSeas".to_string(), Some("Golf".to_string())),
            153 => ("HighSeas".to_string(), Some("Hotel".to_string())),
            154 => ("HighSeas".to_string(), Some("India".to_string())),
            155 => ("HighSeas".to_string(), Some("Kilo".to_string())),
            156 => ("HighSeas".to_string(), Some("Lima".to_string())),
            157 => ("HighSeas".to_string(), Some("Mike".to_string())),
            158 => ("HighSeas".to_string(), Some("November".to_string())),
            159 => ("HighSeas".to_string(), Some("Oscar".to_string())),
            160 => ("HighSeas".to_string(), Some("Papa".to_string())),
            161 => ("HighSeas".to_string(), Some("Quebec".to_string())),
            162 => ("HighSeas".to_string(), Some("Romeo".to_string())),
            163 => ("HighSeas".to_string(), Some("Sierra".to_string())),
            164 => ("HighSeas".to_string(), Some("Tango".to_string())),
            165 => ("HighSeas".to_string(), Some("Uniform".to_string())),
            166 => ("HighSeas".to_string(), Some("Victor".to_string())),
            167 => ("HighSeas".to_string(), Some("Whiskey".to_string())),
            168 => ("HighSeas".to_string(), Some("Xray".to_string())),
            169 => ("HighSeas".to_string(), Some("Yankee".to_string())),
            170 => ("Honduras".to_string(), None),
            171 => ("Hong Kong".to_string(), None),
            172 => ("Hungary".to_string(), None),
            173 => ("Iceland".to_string(), None),
            174 => ("India".to_string(), None),
            175 => ("Indonesia".to_string(), Some("Central".to_string())),
            176 => ("Indonesia".to_string(), Some("Eastern".to_string())),
            177 => ("Indonesia".to_string(), Some("Western".to_string())),
            178 => ("Iran".to_string(), None),
            179 => ("Iraq".to_string(), None),
            180 => ("Ireland".to_string(), None),
            181 => ("Israel".to_string(), None),
            182 => ("Italy".to_string(), None),
            183 => ("Ivory Coast".to_string(), None),
            184 => ("Jamaica".to_string(), None),
            185 => ("Japan".to_string(), None),
            186 => ("Jordan".to_string(), None),
            187 => ("Kazakhstan".to_string(), Some("Eastern".to_string())),
            188 => ("Kazakhstan".to_string(), Some("Western".to_string())),
            189 => ("Kenya".to_string(), None),
            190 => ("Kiribati".to_string(), Some("Gilbert".to_string())),
            191 => ("Kiribati".to_string(), Some("Line".to_string())),
            192 => ("Kiribati".to_string(), Some("Phoenix".to_string())),
            193 => ("Kosovo".to_string(), None),
            194 => ("Kuwait".to_string(), None),
            195 => ("Kyrgyzstan".to_string(), None),
            196 => ("Laos".to_string(), None),
            197 => ("Latvia".to_string(), None),
            198 => ("Lebanon".to_string(), None),
            199 => ("Lesotho".to_string(), None),
            200 => ("Liberia".to_string(), None),
            201 => ("Libya".to_string(), None),
            202 => ("Liechtenstein".to_string(), None),
            203 => ("Lithuania".to_string(), None),
            204 => ("Luxembourg".to_string(), None),
            205 => ("Macau".to_string(), None),
            206 => ("Madagascar".to_string(), None),
            207 => ("Malawi".to_string(), None),
            208 => ("Malaysia".to_string(), None),
            209 => ("Maldives".to_string(), None),
            210 => ("Mali".to_string(), None),
            211 => ("Malta".to_string(), None),
            212 => ("Marshall Islands".to_string(), None),
            213 => ("Mauritania".to_string(), None),
            214 => ("Mauritius".to_string(), None),
            215 => ("Mexico".to_string(), Some("American Central".to_string())),
            216 => ("Mexico".to_string(), Some("American Mountain".to_string())),
            217 => ("Mexico".to_string(), Some("American Pacific".to_string())),
            218 => ("Mexico".to_string(), Some("Mexican Center".to_string())),
            219 => ("Mexico".to_string(), Some("Mexican Pacific".to_string())),
            220 => ("Mexico".to_string(), Some("Mexican Southeast".to_string())),
            221 => ("Micronesia".to_string(), Some("Eastern".to_string())),
            222 => ("Micronesia".to_string(), Some("Western".to_string())),
            223 => ("Moldova".to_string(), None),
            224 => ("Monaco".to_string(), None),
            225 => ("Mongolia".to_string(), Some("Eastern".to_string())),
            226 => ("Mongolia".to_string(), Some("Western".to_string())),
            227 => ("Montenegro".to_string(), None),
            228 => ("Morocco".to_string(), None),
            229 => ("Mozambique".to_string(), None),
            230 => ("Myanmar".to_string(), None),
            231 => ("Namibia".to_string(), None),
            232 => ("Nauru".to_string(), None),
            233 => ("Nepal".to_string(), None),
            234 => ("Netherlands".to_string(), Some("Caribbean".to_string())),
            235 => ("Netherlands".to_string(), Some("Continental".to_string())),
            236 => (
                "New Zealand".to_string(),
                Some("Chatham Islands".to_string()),
            ),
            237 => ("New Zealand".to_string(), Some("Cook Islands".to_string())),
            238 => ("New Zealand".to_string(), Some("Niue".to_string())),
            239 => ("New Zealand".to_string(), Some("Primary".to_string())),
            240 => ("New Zealand".to_string(), Some("Tokelau".to_string())),
            241 => ("Nicaragua".to_string(), None),
            242 => ("Niger".to_string(), None),
            243 => ("Nigeria".to_string(), None),
            244 => ("North Korea".to_string(), None),
            245 => ("North Macedonia".to_string(), None),
            246 => ("Norway".to_string(), None),
            247 => ("Oman".to_string(), None),
            248 => ("Pakistan".to_string(), None),
            249 => ("Palau".to_string(), None),
            250 => ("Palestine".to_string(), None),
            251 => ("Panama".to_string(), None),
            252 => (
                "Papua New Guinea".to_string(),
                Some("Bouganville".to_string()),
            ),
            253 => ("Papua New Guinea".to_string(), Some("Primary".to_string())),
            254 => ("Paraguay".to_string(), None),
            255 => ("Peru".to_string(), None),
            256 => ("Philippines".to_string(), None),
            257 => ("Poland".to_string(), None),
            258 => ("Portugal".to_string(), Some("Azores".to_string())),
            259 => ("Portugal".to_string(), Some("Continental".to_string())),
            260 => ("Qatar".to_string(), None),
            261 => ("Republic of the Congo".to_string(), None),
            262 => ("Romania".to_string(), None),
            263 => ("Russia".to_string(), Some("Irkutsk".to_string())),
            264 => ("Russia".to_string(), Some("Kaliningrad".to_string())),
            265 => ("Russia".to_string(), Some("Kamchatka".to_string())),
            266 => ("Russia".to_string(), Some("Krasnoyarsk".to_string())),
            267 => ("Russia".to_string(), Some("Magadan".to_string())),
            268 => ("Russia".to_string(), Some("Moscow".to_string())),
            269 => ("Russia".to_string(), Some("Omsk".to_string())),
            270 => ("Russia".to_string(), Some("Samara".to_string())),
            271 => ("Russia".to_string(), Some("Vladivostok".to_string())),
            272 => ("Russia".to_string(), Some("Yakutsk".to_string())),
            273 => ("Russia".to_string(), Some("Yekaterinburg".to_string())),
            274 => ("Rwanda".to_string(), None),
            275 => ("Saint Kitts and Nevis".to_string(), None),
            276 => ("Saint Lucia".to_string(), None),
            277 => ("Saint Vincent and the Grenadines".to_string(), None),
            278 => ("Samoa".to_string(), None),
            279 => ("San Marino".to_string(), None),
            280 => ("Sao Tome and Principe".to_string(), None),
            281 => ("Saudi Arabia".to_string(), None),
            282 => ("Senegal".to_string(), None),
            283 => ("Serbia".to_string(), None),
            284 => ("Seychelles".to_string(), None),
            285 => ("Sierra Leone".to_string(), None),
            286 => ("Singapore".to_string(), None),
            287 => ("Slovakia".to_string(), None),
            288 => ("Slovenia".to_string(), None),
            289 => ("Solomon Islands".to_string(), None),
            290 => ("Somalia".to_string(), None),
            291 => ("South Africa".to_string(), None),
            292 => ("South Korea".to_string(), None),
            293 => ("South Sudan".to_string(), None),
            294 => ("Spain".to_string(), Some("Canary Islands".to_string())),
            295 => ("Spain".to_string(), Some("Continental".to_string())),
            296 => ("Sri Lanka".to_string(), None),
            297 => ("Sudan".to_string(), None),
            298 => ("Suriname".to_string(), None),
            299 => ("Sweden".to_string(), None),
            300 => ("Switzerland".to_string(), None),
            301 => ("Syria".to_string(), None),
            302 => ("Taiwan".to_string(), None),
            303 => ("Tajikistan".to_string(), None),
            304 => ("Tanzania".to_string(), None),
            305 => ("Thailand".to_string(), None),
            306 => ("Togo".to_string(), None),
            307 => ("Tonga".to_string(), None),
            308 => ("Trinidad and Tobago".to_string(), None),
            309 => ("Tunisia".to_string(), None),
            310 => ("Turkey".to_string(), None),
            311 => ("Turkmenistan".to_string(), None),
            312 => ("Tuvalu".to_string(), None),
            313 => ("Uganda".to_string(), None),
            314 => ("Ukraine".to_string(), None),
            315 => ("United Arab Emirates".to_string(), None),
            316 => ("United Kingdom".to_string(), Some("Bermuda".to_string())),
            317 => (
                "United Kingdom".to_string(),
                Some("British Isles".to_string()),
            ),
            318 => ("United Kingdom".to_string(), Some("Caribbean".to_string())),
            319 => (
                "United Kingdom".to_string(),
                Some("Cayman Islands".to_string()),
            ),
            320 => ("United Kingdom".to_string(), Some("Falklands".to_string())),
            321 => ("United Kingdom".to_string(), Some("Gibraltar".to_string())),
            322 => (
                "United Kingdom".to_string(),
                Some("Indian Ocean".to_string()),
            ),
            323 => (
                "United Kingdom".to_string(),
                Some("Island of Cyprus".to_string()),
            ),
            324 => (
                "United Kingdom".to_string(),
                Some("Pitcairn Islands".to_string()),
            ),
            325 => (
                "United Kingdom".to_string(),
                Some("Saint Helena".to_string()),
            ),
            326 => (
                "United Kingdom".to_string(),
                Some("South Georgia and Sandwich".to_string()),
            ),
            _ => ("High Seas".to_string(), Some("Zulu".to_string())),
        }
    }

    ///Returns a list of all valid timezones
    pub fn all_valid_timezones() -> Vec<Timezone> {
        let mut output = Vec::with_capacity(327);
        for i in 0..327 {
            output.push(Timezone::from_u16(i as u16))
        }
        output
    }
}
